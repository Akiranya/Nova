package xyz.xenondevs.nova.material

import xyz.xenondevs.nova.material.NovaMaterialRegistry.registerItem

@Suppress("unused")
object CoreGUIMaterial {
    
    val ANVIL_OVERLAY_ARROW = registerItem("nova:gui_anvil_overlay_arrow")
    val ANVIL_OVERLAY_ARROW_LEFT = registerItem("nova:gui_anvil_overlay_arrow_left")
    val ANVIL_OVERLAY_PLUS = registerItem("nova:gui_anvil_overlay_plus")
    val ARROW_1_DOWN = registerItem("nova:gui_arrow_1_down")
    val ARROW_1_LEFT = registerItem("nova:gui_arrow_1_left")
    val ARROW_1_RIGHT = registerItem("nova:gui_arrow_1_right")
    val ARROW_1_UP = registerItem("nova:gui_arrow_1_up")
    val ARROW_2_DOWN = registerItem("nova:gui_arrow_2_down")
    val ARROW_2_LEFT = registerItem("nova:gui_arrow_2_left")
    val ARROW_2_RIGHT = registerItem("nova:gui_arrow_2_right")
    val ARROW_2_UP = registerItem("nova:gui_arrow_2_up")
    val CHECKMARK = registerItem("nova:gui_checkmark")
    val CORNER_BOTTOM_LEFT = registerItem("nova:gui_corner_bottom_left")
    val CORNER_BOTTOM_RIGHT = registerItem("nova:gui_corner_bottom_right")
    val CORNER_TOP_LEFT = registerItem("nova:gui_corner_top_left")
    val CORNER_TOP_RIGHT = registerItem("nova:gui_corner_top_right")
    val GREEN_CHECKMARK = registerItem("nova:gui_green_checkmark")
    val HORIZONTAL_DOTS = registerItem("nova:gui_horizontal_dots")
    val HORIZONTAL_DOWN = registerItem("nova:gui_horizontal_down")
    val HORIZONTAL_LINE = registerItem("nova:gui_horizontal_line")
    val HORIZONTAL_UP = registerItem("nova:gui_horizontal_up")
    val INVENTORY_PART = registerItem("nova:gui_inventory_part")
    val INVISIBLE_ITEM = registerItem("nova:gui_invisible")
    val LIGHT_ARROW_1_DOWN = registerItem("nova:gui_light_arrow_1_down")
    val LIGHT_ARROW_1_LEFT = registerItem("nova:gui_light_arrow_1_left")
    val LIGHT_ARROW_1_RIGHT = registerItem("nova:gui_light_arrow_1_right")
    val LIGHT_ARROW_1_UP = registerItem("nova:gui_light_arrow_1_up")
    val LIGHT_ARROW_2_DOWN = registerItem("nova:gui_light_arrow_2_down")
    val LIGHT_ARROW_2_LEFT = registerItem("nova:gui_light_arrow_2_left")
    val LIGHT_ARROW_2_RIGHT = registerItem("nova:gui_light_arrow_2_right")
    val LIGHT_ARROW_2_UP = registerItem("nova:gui_light_arrow_2_up")
    val LIGHT_CHECKMARK = registerItem("nova:gui_light_checkmark")
    val LIGHT_CORNER_BOTTOM_LEFT = registerItem("nova:gui_light_corner_bottom_left")
    val LIGHT_CORNER_BOTTOM_RIGHT = registerItem("nova:gui_light_corner_bottom_right")
    val LIGHT_CORNER_TOP_LEFT = registerItem("nova:gui_light_corner_top_left")
    val LIGHT_CORNER_TOP_RIGHT = registerItem("nova:gui_light_corner_top_right")
    val LIGHT_HORIZONTAL_DOTS = registerItem("nova:gui_light_horizontal_dots")
    val LIGHT_HORIZONTAL_DOWN = registerItem("nova:gui_light_horizontal_down")
    val LIGHT_HORIZONTAL_LINE = registerItem("nova:gui_light_horizontal_line")
    val LIGHT_HORIZONTAL_UP = registerItem("nova:gui_light_horizontal_up")
    val LIGHT_VERTICAL_DOTS = registerItem("nova:gui_light_vertical_dots")
    val LIGHT_VERTICAL_HORIZONTAL = registerItem("nova:gui_light_vertical_horizontal")
    val LIGHT_VERTICAL_LEFT = registerItem("nova:gui_light_vertical_left")
    val LIGHT_VERTICAL_LINE = registerItem("nova:gui_light_vertical_line")
    val LIGHT_VERTICAL_RIGHT = registerItem("nova:gui_light_vertical_right")
    val LIGHT_X = registerItem("nova:gui_light_x")
    val RED_X = registerItem("nova:gui_red_x")
    val VERTICAL_DOTS = registerItem("nova:gui_vertical_dots")
    val VERTICAL_HORIZONTAL = registerItem("nova:gui_vertical_horizontal")
    val VERTICAL_LEFT = registerItem("nova:gui_vertical_left")
    val VERTICAL_LINE = registerItem("nova:gui_vertical_line")
    val VERTICAL_RIGHT = registerItem("nova:gui_vertical_right")
    val X = registerItem("nova:gui_x")
    val AREA_BTN_OFF = registerItem("nova:gui_area_btn_off")
    val AREA_BTN_ON = registerItem("nova:gui_area_btn_on")
    val MINUS_BTN_OFF = registerItem("nova:gui_minus_btn_off")
    val MINUS_BTN_ON = registerItem("nova:gui_minus_btn_on")
    val PLUS_BTN_OFF = registerItem("nova:gui_plus_btn_off")
    val PLUS_BTN_ON = registerItem("nova:gui_plus_btn_on")
    val SIDE_CONFIG_BTN = registerItem("nova:gui_side_config_btn")
    val ENERGY_BTN_OFF = registerItem("nova:gui_energy_btn_off")
    val ENERGY_BTN_ON = registerItem("nova:gui_energy_btn_on")
    val ENERGY_BTN_SELECTED = registerItem("nova:gui_energy_btn_selected")
    val ITEM_BTN_OFF = registerItem("nova:gui_items_btn_off")
    val ITEM_BTN_ON = registerItem("nova:gui_items_btn_on")
    val ITEM_BTN_SELECTED = registerItem("nova:gui_items_btn_selected")
    val FLUID_BTN_OFF = registerItem("nova:gui_fluids_btn_off")
    val FLUID_BTN_ON = registerItem("nova:gui_fluids_btn_on")
    val FLUID_BTN_SELECTED = registerItem("nova:gui_fluids_btn_selected")
    val BLUE_BTN = registerItem("nova:gui_blue_btn")
    val GRAY_BTN = registerItem("nova:gui_gray_btn")
    val GREEN_BTN = registerItem("nova:gui_green_btn")
    val ORANGE_BTN = registerItem("nova:gui_orange_btn")
    val PINK_BTN = registerItem("nova:gui_pink_btn")
    val RED_BTN = registerItem("nova:gui_red_btn")
    val WHITE_BTN = registerItem("nova:gui_white_btn")
    val YELLOW_BTN = registerItem("nova:gui_yellow_btn")
    val BAR_BLUE = registerItem("nova:gui_bar_blue")
    val BAR_GREEN = registerItem("nova:gui_bar_green")
    val BAR_RED = registerItem("nova:gui_bar_red")
    val BAR_ORANGE = registerItem("nova:gui_bar_orange")
    val TP_BAR_BLUE = registerItem("nova:gui_tp_bar_blue")
    val TP_BAR_GREEN = registerItem("nova:gui_tp_bar_green")
    val TP_BAR_RED = registerItem("nova:gui_tp_bar_red")
    val TP_BAR_ORANGE = registerItem("nova:gui_tp_bar_orange")
    val NUMBER = registerItem("nova:gui_number")
    val MINUS = registerItem("nova:gui_minus")
    val TP_SEARCH = registerItem("nova:gui_tp_search")
    val TP_ARROW_LEFT_BTN_OFF = registerItem("nova:gui_tp_arrow_left_btn_off")
    val TP_ARROW_LEFT_BTN_ON = registerItem("nova:gui_tp_arrow_left_btn_on")
    val TP_ARROW_RIGHT_BTN_OFF = registerItem("nova:gui_tp_arrow_right_btn_off")
    val TP_ARROW_RIGHT_BTN_ON = registerItem("nova:gui_tp_arrow_right_btn_on")
    val TP_STOPWATCH = registerItem("nova:gui_tp_stopwatch")
    val TP_COLOR_PICKER = registerItem("nova:gui_tp_color_picker")
    val TP_PIXEL_ARROW_LEFT_OFF = registerItem("nova:gui_tp_pixel_arrow_left_off")
    val TP_PIXEL_ARROW_LEFT_ON = registerItem("nova:gui_tp_pixel_arrow_left_on")
    val TP_PIXEL_ARROW_RIGHT_OFF = registerItem("nova:gui_tp_pixel_arrow_right_off")
    val TP_PIXEL_ARROW_RIGHT_ON = registerItem("nova:gui_tp_pixel_arrow_right_on")
    
    // Might be moved to a separate addon in the future
    val UPGRADES_BTN = registerItem("nova:gui_upgrades_btn", "menu.nova.upgrades")
    val SPEED_UPGRADE = registerItem("nova:gui_speed_upgrade")
    val EFFICIENCY_UPGRADE = registerItem("nova:gui_efficiency_upgrade")
    val ENERGY_UPGRADE = registerItem("nova:gui_energy_upgrade")
    val RANGE_UPGRADE = registerItem("nova:gui_range_upgrade")
    val FLUID_UPGRADE = registerItem("nova:gui_fluid_upgrade")
    val TP_SPEED_UPGRADE = registerItem("nova:gui_tp_speed_upgrade")
    val TP_EFFICIENCY_UPGRADE = registerItem("nova:gui_tp_efficiency_upgrade")
    val TP_ENERGY_UPGRADE = registerItem("nova:gui_tp_energy_upgrade")
    val TP_RANGE_UPGRADE = registerItem("nova:gui_tp_range_upgrade")
    val TP_FLUID_UPGRADE = registerItem("nova:gui_tp_fluid_upgrade")
    
}